{"version":3,"sources":["assets/images/logo.svg","components/TopBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","_this","nba","stats","shots","PlayerID","props","playerId","Season","then","response","console","log","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","_getPrototypeOf2","_len","length","args","Array","_key","concat","state","inputValue","onChange","setState","onMinCountChange","row","col","span","slider","min","max","input_number","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","onChartTypeChange","e","target","onTooltipChange","ShotChart_ShotChart","offset","CountSlider_CountSlider","_","debounce","es_radio","es_switch","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","fullName","teamAbbreviation","Profile","_this$props$playerInf","playerInfo","playerName","height","weight","teamName","teamCity","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","onSelect","loadPlayerInfo","handleSearch","searchPlayers","_ref","auto_complete","onSearch","placeholder","optionLabelProp","input","suffix","icon","type","Main","findPlayer","info","assign","commonPlayerInfo","playerHeadlineStats","SearchBar_SearchBar","Profile_Profile","DataViewContainer_DataViewContainer","App","TopBar_TopBar","Main_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcf1b820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9470e2d5.svg\";","import React from 'react';\nimport logo from \"../assets/images/logo.svg\";\n\nexport class TopBar extends React.Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    );\n  }\n}","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\nexport class ShotChart extends React.Component {\n  static propTypes = {\n    playerId: PropTypes.number.isRequired,\n    minCount: PropTypes.number.isRequired,\n    chartType: PropTypes.string.isRequired,\n    displayTooltip: PropTypes.bool.isRequired,\n  }\n\n  componentDidUpdate() {\n    nba.stats.shots({\n      PlayerID: this.props.playerId,\n      // Season: '2016-17',\n      Season: '2018-19',\n    }).then((response) => {\n      console.log(response);\n      const final_shots = response.shot_Chart_Detail.map(shot => ({\n        x: (shot.locX + 250) / 10,\n        y: (shot.locY + 50) / 10,\n        action_type: shot.actionType,\n        shot_distance: shot.shotDistance,\n        shot_made_flag: shot.shotMadeFlag,\n      }));\n\n      const courtSelection = d3.select(\"#shot-chart\");\n      // Clear the shotchart each time we update the threshold to refresh\n      courtSelection.html('');\n      const chart_court = court().width(500);\n      const chart_shots = shots()\n        .shotRenderThreshold(this.props.minCount)\n        .displayToolTips(this.props.displayTooltip)\n        .displayType(this.props.chartType);\n      courtSelection.call(chart_court);\n      courtSelection.datum(final_shots).call(chart_shots);\n    });\n  }\n  render() {\n    return (\n      <div id=\"shot-chart\"></div>\n    );\n  }\n}\n","import React from 'react'\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n  state = {\n    inputValue: 3,  // Default number of shots count set to 3\n  }\n\n  onChange = (value) => {\n    this.setState({\n      inputValue: value,\n    });\n    this.props.onMinCountChange(value);\n  }\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={1}\n            max={20}\n            onChange={this.onChange}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={1}\n            max={20}\n            style={{ marginLeft: 16 }}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Radio, Switch, Row, Col } from 'antd';\nimport { ShotChart } from \"./ShotChart\"\nimport { CountSlider } from \"./CountSlider\"\n\nconst RadioGroup = Radio.Group;\n\nexport class DataViewContainer extends React.Component {\n  state = {\n    minCount: 3,\n    chartType: 'hexbin',\n    displayTooltip: true,\n  }\n\n  onMinCountChange = (minCount) => {\n    this.setState({ minCount });\n  }\n\n  onChartTypeChange = (e) => {\n    this.setState({ chartType: e.target.value });\n  }\n\n  onTooltipChange = (displayTooltip) => {\n    this.setState({ displayTooltip });\n  }\n\n  render() {\n    return (\n      <div className=\"data-view\">\n        <ShotChart\n          playerId={this.props.playerId}\n          minCount={this.state.minCount}\n          chartType={this.state.chartType}\n          displayTooltip={this.state.displayTooltip}\n        />\n        <div className=\"filters\">\n          <Row className=\"filter-row\">\n            <Col span={2} offset={3} className=\"filter-label\">Shots: </Col>\n            <Col span={16}>\n              <CountSlider className=\"filter-control\" onMinCountChange={_.debounce(this.onMinCountChange, 500)}/>\n            </Col>\n          </Row>\n          <Row className=\"filter-row\">\n            <Col span={10} offset={3}>\n              <RadioGroup onChange={this.onChartTypeChange} value={this.state.chartType} className=\"filter-control\">\n                <Radio value=\"hexbin\">Hexbin</Radio>\n                <Radio value=\"scatter\">Scatter</Radio>\n              </RadioGroup>\n            </Col>\n            <Col span={2}>Tooltip: </Col>\n            <Col span={3} className=\"filter-control\">\n              <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" defaultChecked onChange={this.onTooltipChange}/>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO = {\n  playerId: 203507,\n  fullName: 'Giannis Antetokounmpo',\n  teamAbbreviation: 'MIL',\n};\n","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\nexport class Profile extends React.Component {\n  render() {\n    const {\n      playerId,\n      playerName,\n      height,\n      weight,\n      teamName,\n      teamCity,\n      teamAbbreviation,\n      pts, reb, ast, pie,\n    } = this.props.playerInfo;\n    return (\n      <div className=\"profile\">\n        <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n        <img\n          className=\"profile-pic\"\n          src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n          alt=\"Profile\"\n        />\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Team</div>\n          {/*<div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>*/}\n          <div className=\"profile-entry-right\">{`${teamAbbreviation}`}</div>\n        </div>\n        <div className=\"team-info\">\n          <img\n            className=\"team-logo\"\n            src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n            alt=\"Team\"\n          />\n          <div className=\"team-abbreviation\">{`${teamCity} ${teamName}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Height</div>\n          <div className=\"profile-entry-right\">{`${height}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Weight</div>\n          <div className=\"profile-entry-right\">{`${weight}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PTS</div>\n          <div className=\"profile-entry-right\">{`${pts}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">REB</div>\n          <div className=\"profile-entry-right\">{`${reb}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">AST</div>\n          <div className=\"profile-entry-right\">{`${ast}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PIE</div>\n          <div className=\"profile-entry-right\">{`${pie}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from 'nba';\nimport { PROFILE_PIC_URL_PREFIX } from \"../constants\"\n\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n  state = {\n    dataSource: [],\n  }\n\n  onSelect = (playerName) => {\n    this.props.loadPlayerInfo(playerName);\n  }\n\n  handleSearch = (value) => {\n    console.log(nba.searchPlayers(value));\n    this.setState({\n      dataSource: !value ? [] : nba.searchPlayers(value).map(\n        ({playerId, fullName}) => (\n          <Option key={playerId} value={fullName}>\n            <img\n              className=\"player-option-image\"\n              src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n              alt=\"Profile\"\n            />\n            <span className=\"player-option-label\">{fullName}</span>\n          </Option>\n        )\n      ),\n    });\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <AutoComplete\n        dataSource={dataSource}\n        className=\"search-bar\"\n        onSelect={this.onSelect}\n        onSearch={this.handleSearch}\n        placeholder=\"Player Name\"\n        optionLabelProp=\"value\"\n      >\n        <Input suffix={ <Icon type=\"search\" /> } />\n      </AutoComplete>\n    );\n  }\n}","import React from 'react';\nimport { DataViewContainer } from './DataViewContainer';\nimport nba from 'nba'\nimport { Profile } from './Profile';\nimport { SearchBar } from './SearchBar';\nimport { DEFAULT_PLAYER_INFO } from '../constants';\n\nexport class Main extends React.Component {\n  state = {\n    playerInfo: DEFAULT_PLAYER_INFO,\n  }\n\n  componentDidMount() {\n    this.loadPlayerInfo(this.state.playerInfo.fullName);\n  }\n\n  loadPlayerInfo = (playerName) => {\n    nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n      const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n      this.setState({ playerInfo });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <SearchBar loadPlayerInfo={this.loadPlayerInfo}/>\n        <div className=\"player\">\n          <Profile playerInfo={this.state.playerInfo}/>\n          <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar/>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}